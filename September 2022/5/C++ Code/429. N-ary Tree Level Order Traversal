/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        vector<vector<int>> list;
        if(root==NULL) return list;
        queue<Node*> dq;
        dq.push(root);
        while(dq.size()>0) {
            int s = dq.size();
            vector<int> list1;
            for(int i=0;i<s;i++) {
                Node* p = dq.front();
                dq.pop();
                
                list1.push_back(p->val);
                
                for(Node* child : p->children) {
                    if(child!=NULL) dq.push(child);
                }
            }
            list.push_back(list1);
        }
        return list;
    }
};

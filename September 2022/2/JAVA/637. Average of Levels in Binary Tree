/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> ans = new ArrayList<>();
        
        ArrayDeque<TreeNode> help = new ArrayDeque<>();
        help.add(root);
        
        while(help.size()>0) {
            int size = help.size();
            double sum =0;
            for(int i=0;i<size;i++) {
                TreeNode p = help.pop();
                sum+=p.val*1.0;
                if(p.left!=null) {
                    help.add(p.left);
                }
                if(p.right!=null) {
                    help.add(p.right);
                }
            }
            ans.add(sum/size);
        }
        return ans;
    }
}
